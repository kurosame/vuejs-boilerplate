references:
  commands:
    setup-docker: &setup-docker
      docker:
        - image: kurosame/circleci-node

version: 2
jobs:
  test:
    <<: *setup-docker
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - run:
          name: Test for CI
          command: yarn test:ci
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - store_artifacts:
          path: ./test/unit/coverage
  e2e:
    <<: *setup-docker
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - run:
          name: E2E Test for CI
          command: yarn e2e:ci
      - save_cache:
          name: Cache dependencies
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - store_artifacts:
          path: ./test/e2e/specs/__screenshots__
  outdated:
    <<: *setup-docker
    steps:
      - checkout
      - restore_cache:
          name: Download and cache dependencies
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install
          command: yarn install
      - run:
          name: Outdated
          command: |
            # yarn outdated
            # OUTDATED
            # $(yarn outdated) >> OUTDATED
            # echo $OUTDATED
            # echo "aaaa" >> OUTDATED
            PAYLOAD=`cat << EOF
              {
                "text": "aaaaaaaaaaaa"
              }
            EOF`
            # echo $POST_DATA
            curl -X POST --data-urlencode "payload=$PAYLOAD" $SLACK_WEBHOOK_URL

            # curl -X POST -H --data-urlencode "payload={\"text\": \"$?\"}" $SLACK_WEBHOOK_URL

workflows:
  version: 2
  test:
    jobs:
      - test
      - e2e
  nightly:
    triggers:
      - schedule:
          cron: '09 * * * *'
          filters:
            branches:
              only:
                - master
    jobs:
      - outdated
